<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Beata.Medrek">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    
    <!--Window Icon Button-->
    <Style TargetType="{x:Type Button}" x:Key="IconButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10">
                        <Viewbox>
                            <TextBlock FontFamily="{StaticResource FontAwesome2}"
                                Text="{StaticResource IconText}"/>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Window Bottom Menu Buttons-->
    <Style x:Key="BottomMenu" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="BorderThickness" Value="1 0 1 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome2}"/>
        <Setter Property="FontSize" Value="{StaticResource Regular}"/>
        <Setter Property="Padding" Value="80 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="{StaticResource LightBlue}"
                                                    Duration="0:0:0.1"
                                                    />
                                    <ColorAnimation Storyboard.Target="{TemplateBinding Foreground}"
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="{StaticResource Background}"
                                                    Duration="0:0:.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="{StaticResource Background}"
                                                    Duration="0:0:0.2"
                                                    />
                                    <ColorAnimation Storyboard.Target="{TemplateBinding Foreground}"
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="{StaticResource LightBlue}"
                                                    Duration="0:0:.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window Close Button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowClose">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            >
                        <Label VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                FontSize="{StaticResource Small}"
                                FontFamily="{StaticResource FontAwesome}"
                                Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window Maximize Button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowMaximize">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="local:WindowAttachedProperties.WindowMaximized" Value="False"/>
        <Setter Property="Padding" Value="0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"        
                           >
                        <Grid>
                            <!--Maximize Window Icon-->
                            <Label x:Name="MaxText"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                  FontSize="{StaticResource Small}" 
                                  FontFamily="{StaticResource FontAwesome}"
                                  Content="{TemplateBinding Content}">
                            </Label>
                            
                          
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window Minimize Button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowMinimize">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Padding" Value="0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                           Padding="{TemplateBinding Padding}"
                            >

                        <Label VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                FontSize="{StaticResource Small}" 
                                FontFamily="{StaticResource FontAwesome}"
                                Content="{TemplateBinding Content}"/>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Login Button-->
    <Style  TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource Regular}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 10"/>
        <Setter Property="Margin"  Value="0"/>
        <Setter Property="local:IsBusyAttachedProperty.IsBusy" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7"
                            Padding="{TemplateBinding Padding}"
                            >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="0" Opacity="0.3"/>
                        </Border.Effect>
                        <Grid>
                            <Label x:Name="loginText"
                                   FontFamily="{StaticResource Consolas}"
                                   FontSize="{TemplateBinding FontSize}"
                                    Visibility="{TemplateBinding local:IsBusyAttachedProperty.IsBusy,Converter={local:BooleanToVisibilityValueConverter}}"
                                   Content="{TemplateBinding Content}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <TextBlock x:Name="IsBusyText"
                                       Style="{StaticResource SpinText}"
                                   FontFamily="{StaticResource FontAwesome2}"
                                   FontSize="{StaticResource Average}"
                                   Visibility="{TemplateBinding local:IsBusyAttachedProperty.IsBusy,Converter={local:BooleanToVisibilityValueConverter},ConverterParameter=true}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   >
                                <TextBlock.RenderTransform>
                                    <RotateTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0" BlurRadius="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FontSize" TargetName="loginText" Value="16"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="{StaticResource VeryLightBlue}"
                                                    Duration="0:0:.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="{StaticResource Background}"
                                                    Duration="0:0:.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
           
        </Style.Triggers>
    </Style>

    <!--Main Menu Button Style-->
    <Style TargetType="{x:Type Button}" x:Key="MainMenuButton">
        <Setter Property="Padding" Value="20 50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" 
                            >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="0.2*"/>
                            </Grid.RowDefinitions>
                            
                            <!--Icon Display Box-->
                            <Border x:Name="iconBox"
                                CornerRadius="7"
                                Background="{StaticResource VeryLightBlueBrush}"
                                    >
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="0"
                                                   Opacity="0.1"/>
                                </Border.Effect>
                                
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard >
                                                <DoubleAnimation To="1" Storyboard.TargetName="textBox" 
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:.3"/>
                                                <ColorAnimation To="{StaticResource LightBlue}" Storyboard.TargetName="iconBox" 
                                                                 Storyboard.TargetProperty="Background.Color"
                                                                 Duration="0:0:.3"/>
                                                <ColorAnimation To="{StaticResource Background}" Storyboard.TargetName="iconText" 
                                                                 Storyboard.TargetProperty="Foreground.Color"
                                                                 Duration="0:0:.4"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="textBox" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:.3"/>
                                                <ColorAnimation To="{StaticResource VeryLightBlue}" Storyboard.TargetName="iconBox" 
                                                                 Storyboard.TargetProperty="Background.Color"
                                                                 Duration="0:0:.3"/>
                                                <ColorAnimation To="{StaticResource ForegroundDark}" Storyboard.TargetName="iconText" 
                                                                 Storyboard.TargetProperty="Foreground.Color"
                                                                 Duration="0:0:.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>

                                <Viewbox>
                                    <!--Button Icon-->
                                    <Label x:Name="iconText" 
                                        Content="{TemplateBinding Content}"
                                       Foreground="{StaticResource ForegroundDarkBrush}"
                                       VerticalAlignment="Center"
                                       VerticalContentAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="130"
                                       FontFamily="{StaticResource FontAwesome2}"/>

                                </Viewbox>    
                            </Border>

                            <!--Text Display Box-->
                            <TextBlock x:Name="textBox" 
                                    Text="{TemplateBinding Tag}"
                                   FontFamily="{StaticResource LatoBold}"
                                   Grid.Row="1"
                                   Opacity="0"
                                   FontSize="14"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>